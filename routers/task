from fastapi import APIRouter
from sqlalchemy import Column, Integer, String, Boolean
from sqlalchemy import relationship
from App.backend import *
from App.backend.db import Base


class Products(Base):
    __tablename__ = 'tasks'
    __table_args__ = {'keep_existing': True}
    id = Column(Integer, primary_key=True, index=True)
    title = Column(String)
    content = Column(String)
    priority = Column(Integer, default=0)
    completed = Column(Boolean, default=False)
    user_id = Column(Integer, foreign_key='users.id', nullable=True, index=True)
    slug = Column(String, unique=True, index=True)
    user = relationship('User', bk_populates='user')




router = APIRouter(prefix="/task", tags=["task"])

@router.get("/")
async def all_tasks():
    pass

@router.get("/task_id")
async def task_by_id():
    pass

@router.post("/create")
async def create_task():
    pass

@router.put("/update")
async def update_task():
    pass

@router.delete("/delete")
async def delet_task():
    pass
